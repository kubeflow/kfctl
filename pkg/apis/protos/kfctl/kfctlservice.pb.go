// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kfctlservice.proto

package kfctl

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KFDef struct {
	ConfigFile           string   `protobuf:"bytes,1,opt,name=ConfigFile,proto3" json:"ConfigFile,omitempty"`
	Platform             string   `protobuf:"bytes,2,opt,name=Platform,proto3" json:"Platform,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KFDef) Reset()         { *m = KFDef{} }
func (m *KFDef) String() string { return proto.CompactTextString(m) }
func (*KFDef) ProtoMessage()    {}
func (*KFDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_873128b92822e5ee, []int{0}
}

func (m *KFDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KFDef.Unmarshal(m, b)
}
func (m *KFDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KFDef.Marshal(b, m, deterministic)
}
func (m *KFDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KFDef.Merge(m, src)
}
func (m *KFDef) XXX_Size() int {
	return xxx_messageInfo_KFDef.Size(m)
}
func (m *KFDef) XXX_DiscardUnknown() {
	xxx_messageInfo_KFDef.DiscardUnknown(m)
}

var xxx_messageInfo_KFDef proto.InternalMessageInfo

func (m *KFDef) GetConfigFile() string {
	if m != nil {
		return m.ConfigFile
	}
	return ""
}

func (m *KFDef) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

type KubeContext struct {
	KubeConfig           []byte   `protobuf:"bytes,1,opt,name=KubeConfig,proto3" json:"KubeConfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubeContext) Reset()         { *m = KubeContext{} }
func (m *KubeContext) String() string { return proto.CompactTextString(m) }
func (*KubeContext) ProtoMessage()    {}
func (*KubeContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_873128b92822e5ee, []int{1}
}

func (m *KubeContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubeContext.Unmarshal(m, b)
}
func (m *KubeContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubeContext.Marshal(b, m, deterministic)
}
func (m *KubeContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeContext.Merge(m, src)
}
func (m *KubeContext) XXX_Size() int {
	return xxx_messageInfo_KubeContext.Size(m)
}
func (m *KubeContext) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeContext.DiscardUnknown(m)
}

var xxx_messageInfo_KubeContext proto.InternalMessageInfo

func (m *KubeContext) GetKubeConfig() []byte {
	if m != nil {
		return m.KubeConfig
	}
	return nil
}

type UploadStatus struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadStatus) Reset()         { *m = UploadStatus{} }
func (m *UploadStatus) String() string { return proto.CompactTextString(m) }
func (*UploadStatus) ProtoMessage()    {}
func (*UploadStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_873128b92822e5ee, []int{2}
}

func (m *UploadStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadStatus.Unmarshal(m, b)
}
func (m *UploadStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadStatus.Marshal(b, m, deterministic)
}
func (m *UploadStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadStatus.Merge(m, src)
}
func (m *UploadStatus) XXX_Size() int {
	return xxx_messageInfo_UploadStatus.Size(m)
}
func (m *UploadStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadStatus.DiscardUnknown(m)
}

var xxx_messageInfo_UploadStatus proto.InternalMessageInfo

func (m *UploadStatus) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type Status struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Failure              bool     `protobuf:"varint,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	Pending              bool     `protobuf:"varint,3,opt,name=Pending,proto3" json:"Pending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_873128b92822e5ee, []int{3}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Status) GetFailure() bool {
	if m != nil {
		return m.Failure
	}
	return false
}

func (m *Status) GetPending() bool {
	if m != nil {
		return m.Pending
	}
	return false
}

func init() {
	proto.RegisterType((*KFDef)(nil), "kfctl.KFDef")
	proto.RegisterType((*KubeContext)(nil), "kfctl.KubeContext")
	proto.RegisterType((*UploadStatus)(nil), "kfctl.UploadStatus")
	proto.RegisterType((*Status)(nil), "kfctl.Status")
}

func init() { proto.RegisterFile("kfctlservice.proto", fileDescriptor_873128b92822e5ee) }

var fileDescriptor_873128b92822e5ee = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x31, 0x4f, 0x84, 0x40,
	0x10, 0x85, 0x73, 0x1a, 0x10, 0x47, 0x4c, 0xcc, 0xd8, 0x10, 0x0a, 0x63, 0x48, 0x4c, 0xae, 0x91,
	0x42, 0x4b, 0x4b, 0x2e, 0x34, 0x34, 0x17, 0x2e, 0xda, 0x73, 0xdc, 0x2c, 0xd9, 0xdc, 0xca, 0x12,
	0xd8, 0x35, 0xfa, 0xef, 0xcd, 0xce, 0x2d, 0x1e, 0x9d, 0xe5, 0xf7, 0xde, 0xec, 0xec, 0xbc, 0x07,
	0x78, 0x14, 0xad, 0x51, 0x13, 0x8d, 0x5f, 0xb2, 0xa5, 0x7c, 0x18, 0xb5, 0xd1, 0x18, 0xb0, 0x96,
	0x15, 0x10, 0x54, 0xe5, 0x86, 0x04, 0x3e, 0x00, 0x14, 0xba, 0x17, 0xb2, 0x2b, 0xa5, 0xa2, 0x64,
	0xf5, 0xb8, 0x5a, 0x5f, 0xd7, 0x0b, 0x05, 0x53, 0x88, 0xb6, 0xaa, 0x31, 0x42, 0x8f, 0x9f, 0xc9,
	0x05, 0xbb, 0x7f, 0x9c, 0x3d, 0xc3, 0x4d, 0x65, 0xf7, 0x54, 0xe8, 0xde, 0xd0, 0xb7, 0x71, 0xab,
	0x3c, 0x0a, 0xd9, 0xf1, 0xaa, 0xb8, 0x5e, 0x28, 0xd9, 0x1a, 0xe2, 0xf7, 0x41, 0xe9, 0xe6, 0xb0,
	0x33, 0x8d, 0xb1, 0x13, 0x26, 0x70, 0xb5, 0xb3, 0x6d, 0x4b, 0xd3, 0xc4, 0xc3, 0x51, 0x3d, 0x63,
	0xf6, 0x01, 0xe1, 0x7f, 0x33, 0xce, 0x29, 0x1b, 0xa9, 0xec, 0x48, 0x7c, 0x57, 0x54, 0xcf, 0xe8,
	0x9c, 0x2d, 0xf5, 0x07, 0xd9, 0x77, 0xc9, 0xe5, 0xc9, 0xf1, 0xf8, 0x72, 0x84, 0xa0, 0x72, 0xf1,
	0xf1, 0x09, 0xc2, 0x0d, 0x0d, 0x4a, 0xff, 0x60, 0x9c, 0x73, 0x21, 0x39, 0xb7, 0x91, 0xde, 0x7a,
	0xf2, 0xbf, 0xbf, 0xc1, 0xdd, 0xe9, 0xe2, 0x73, 0x0a, 0xc4, 0xf9, 0xc1, 0x39, 0x79, 0x7a, 0xef,
	0xb5, 0x65, 0xbc, 0x7d, 0xc8, 0x85, 0xbf, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xd4, 0x3c, 0xc6,
	0x1d, 0x86, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KfctlClient is the client API for Kfctl service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KfctlClient interface {
	Deploy(ctx context.Context, in *KFDef, opts ...grpc.CallOption) (*Status, error)
	UploadKubeConfig(ctx context.Context, in *KubeContext, opts ...grpc.CallOption) (*UploadStatus, error)
}

type kfctlClient struct {
	cc *grpc.ClientConn
}

func NewKfctlClient(cc *grpc.ClientConn) KfctlClient {
	return &kfctlClient{cc}
}

func (c *kfctlClient) Deploy(ctx context.Context, in *KFDef, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/kfctl.Kfctl/Deploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kfctlClient) UploadKubeConfig(ctx context.Context, in *KubeContext, opts ...grpc.CallOption) (*UploadStatus, error) {
	out := new(UploadStatus)
	err := c.cc.Invoke(ctx, "/kfctl.Kfctl/UploadKubeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KfctlServer is the server API for Kfctl service.
type KfctlServer interface {
	Deploy(context.Context, *KFDef) (*Status, error)
	UploadKubeConfig(context.Context, *KubeContext) (*UploadStatus, error)
}

// UnimplementedKfctlServer can be embedded to have forward compatible implementations.
type UnimplementedKfctlServer struct {
}

func (*UnimplementedKfctlServer) Deploy(ctx context.Context, req *KFDef) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deploy not implemented")
}
func (*UnimplementedKfctlServer) UploadKubeConfig(ctx context.Context, req *KubeContext) (*UploadStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadKubeConfig not implemented")
}

func RegisterKfctlServer(s *grpc.Server, srv KfctlServer) {
	s.RegisterService(&_Kfctl_serviceDesc, srv)
}

func _Kfctl_Deploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KFDef)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KfctlServer).Deploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kfctl.Kfctl/Deploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KfctlServer).Deploy(ctx, req.(*KFDef))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kfctl_UploadKubeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KubeContext)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KfctlServer).UploadKubeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kfctl.Kfctl/UploadKubeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KfctlServer).UploadKubeConfig(ctx, req.(*KubeContext))
	}
	return interceptor(ctx, in, info, handler)
}

var _Kfctl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kfctl.Kfctl",
	HandlerType: (*KfctlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Deploy",
			Handler:    _Kfctl_Deploy_Handler,
		},
		{
			MethodName: "UploadKubeConfig",
			Handler:    _Kfctl_UploadKubeConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kfctlservice.proto",
}
